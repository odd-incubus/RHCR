Allowed options:
  --help                              produce help message
  --scenario arg                      scenario (SORTING, KIVA, ONLINE, BEE)
  -m [ --map ] arg                    input map file
  --task arg                          input task file
  -o [ --output ] arg (=../exp/test)  output folder name
  -k [ --agentNum ] arg               number of drives
  -t [ --cutoffTime ] arg (=60)       cutoff time (seconds)
  -d [ --seed ] arg                   random seed
  -s [ --screen ] arg (=1)            screen option (0: none; 1: results; 
                                      2:all)
  --solver arg (=PBS)                 solver (LRA, PBS, WHCA, ECBS)
  --id arg (=0)                       independence detection
  --single_agent_solver arg (=SIPP)   single-agent solver (ASTAR, SIPP)
  --lazyP arg (=0)                    use lazy priority
  --simulation_time arg (=5000)       run simulation
  --simulation_window arg (=5)        call the planner every simulation_window 
                                      timesteps
  --travel_time_window arg (=0)       consider the traffic jams within the 
                                      given window
  --planning_window arg (=1073741823) the planner outputs plans with first 
                                      planning_window timesteps collision-free
  --potential_function arg (=NONE)    potential function (NONE, SOC, IC)
  --potential_threshold arg (=0)      potential threshold
  --rotation arg (=0)                 consider rotation
  --robust arg (=0)                   k-robust (for now, only work for PBS)
  --CAT arg (=0)                      use conflict-avoidance table
  --hold_endpoints arg (=0)           Hold endpoints from Ma et al, AAMAS 2017
  --dummy_paths arg (=0)              Find dummy paths from Liu et al, AAMAS 
                                      2019
  --prioritize_start arg (=1)         Prioritize waiting at start locations
  --suboptimal_bound arg (=1)         Suboptimal bound for ECBS
  --log arg (=0)                      save the search trees (and the priority 
                                      trees)